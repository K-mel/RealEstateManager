apply plugin: 'com.android.application'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlin-parcelize'

def mapApiKey = project.properties['MAPS_API_KEY']
def staticMapApiKey = project.properties['GOOGLE_MAPS_STATIC_API_KEY']

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.openclassrooms.realestatemanager"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'com.openclassrooms.realestatemanager.HiltTestRunner'
        multiDexEnabled true

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
            }
        }
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField("String", "MAPS_API_KEY", "\"${mapApiKey}\"")
            resValue("string", "maps_api_key", "${mapApiKey}")

            buildConfigField("String", "GOOGLE_MAPS_STATIC_API_KEY", "\"${staticMapApiKey}\"")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions.freeCompilerArgs += [
            "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
            "-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi"]

    packagingOptions {
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/AL2.0'
        exclude 'win32-x86/attach_hotspot_windows.dll'
        exclude 'win32-x86-64/attach_hotspot_windows.dll'
        exclude 'META-INF/licenses/ASM'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0-alpha01'
    androidTestImplementation 'androidx.test:rules:1.4.1-alpha01'
    implementation "androidx.startup:startup-runtime:1.1.0"
    implementation 'android.arch.lifecycle:extensions:1.1.1'

    implementation "androidx.fragment:fragment-ktx:1.3.6"
    implementation "androidx.activity:activity-ktx:1.3.1"

    // Dagger Hilt
    implementation("com.google.dagger:hilt-android:$hilt_version")
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.5.0-alpha01'
    kapt("com.google.dagger:hilt-android-compiler:$hilt_version")
    // Dagger Hilt - For Work Manager
    implementation("androidx.hilt:hilt-work:1.0.0")
    kapt("androidx.hilt:hilt-compiler:1.0.0")
    // Dagger Hilt - For instrumentation tests
    androidTestImplementation  ("com.google.dagger:hilt-android-testing:$hilt_version")
    kaptAndroidTest ("com.google.dagger:hilt-compiler:$hilt_version")
    // Dagger Hilt - For local unit tests
    testImplementation ("com.google.dagger:hilt-android-testing:$hilt_version")
    kaptTest ("com.google.dagger:hilt-compiler:$hilt_version")

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // Google Maps
    implementation 'com.google.android.gms:play-services-maps:18.0.2'
    implementation 'com.google.maps.android:android-maps-utils:2.2.6'

    // Location
    implementation 'com.google.android.gms:play-services-location:19.0.1'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:29.0.4')
    implementation 'com.google.firebase:firebase-firestore-ktx:24.0.1'
    implementation 'com.google.firebase:firebase-storage-ktx:20.0.0'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'

    // Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.1"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.5.1'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.1"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.1"

    // Timber
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.1"

    // ExoPlayer
    implementation 'com.google.android.exoplayer:exoplayer:2.15.0'

    // PhotoView
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    // Room
    implementation "androidx.room:room-ktx:2.3.0"
    kapt "androidx.room:room-compiler:2.3.0"
    androidTestImplementation "androidx.room:room-testing:2.3.0"

    // Work Manager
    //noinspection GradleDependency -> Needed for hilt injection
    implementation("androidx.work:work-runtime-ktx:2.5.0")

    // Leak Canary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    // GRPC - Needed to avoid crash on Android 11 devices
    implementation "io.grpc:grpc-okhttp:1.32.2"

    // Truth
    androidTestImplementation "com.google.truth:truth:1.1.3"
    testImplementation "com.google.truth:truth:1.1.3"

    // Turbine
    androidTestImplementation 'app.cash.turbine:turbine:0.6.1'

    // Mockito
    testImplementation "org.mockito:mockito-core:3.12.4"
    testImplementation "org.mockito.kotlin:mockito-kotlin:3.2.0"
}

kapt {
    correctErrorTypes true
}
